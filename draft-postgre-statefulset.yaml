# kind: ConfigMap
# apiVersion: v1
# metadata:
#   name: nginx-conf
# data:
#   nginx.conf: |
#     user nginx;
#     worker_processes  1;
#     events {
#       worker_connections  10240;
#     }
#     http {
#       server {
#           listen       80;
#           server_name  localhost;
#           location / {
#             root   /usr/share/nginx/html;
#             index  index.html index.htm;
#             auth_basic           "Authorization required";
#             auth_basic_user_file /opt/.htpasswd;
#         }
#       }
#     }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: django-local-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /mnt/vol1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s-worker1
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
# about name:
#{{ .Release.Name }}=django+version or django;$version_label
  name: django-db
  labels:
    app: django-db
spec:
  selector:
    matchLabels:
      app: django-db
  replicas: 1
  minReadySeconds: 20                                 # todo
  template:
    metadata:
      labels:
        app: django-db
    spec:
      terminationGracePeriodSeconds: 20               # todo
      containers:
        - name: django-db
          image: postgres:13-alpine
          volumeMounts:
            - name: tutorial-volume
              mountPath: /var/lib/postgresql/data
            # - name: config
            #   mountPath: /etc/nginx
            #   readOnly: true
          ports:
            - containerPort: 5432
              name: django-db-port
          env:
            - name: POSTGRES_DB
              value: "tutorial-dev"
            - name: POSTGRES_USER
              value: "vinhle"
            - name: POSTGRES_PASSWORD
              value: "password"
            # - name: NGINX_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: auth-basic
            #       key: user1 # secret generated by secret.yaml
      # volumes:
      #   - name: config
      #     configMap:
      #       name: nginx-conf
      #       items:
      #         - key: nginx.conf
      #           path: nginx.conf

  volumeClaimTemplates:                     // this will be used to create PVC
  - metadata:
      name: django-local-pv
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi





# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: sf-webserver
# spec:
#   type: LoadBalancer
#   selector:
#     app: web1-pod
#   ports:
#   - protocol: TCP
#     nodePort: 30001
#     port: 5432
#     targetPort: django-db-port

#kind: Service
#apiVersion: v1
#metadata:
#  name: sf-webserver
#spec:
#  type: NodePort
#  selector:
#    app: web1-pod
#  ports:
#  - protocol: TCP
#    nodePort: 31111
#    port: 5432
#    targetPort: web1-nginx-port
# Service available from this and other nodes



#kind: Service
#apiVersion: v1
#metadata:
#  name: sf-webserver
#spec:
#  selector:
#    app: web1-pod
#  ports:
#  - protocol: TCP
#    port: 5432
#    targetPort: web1-nginx-port


#        command: ['sh', '-c', 'echo Hello Kubernetes from the Deployment! && sleep 3600']


